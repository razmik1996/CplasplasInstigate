\hypertarget{Exercises_8hpp}{}\section{src/\+Exercises.hpp File Reference}
\label{Exercises_8hpp}\index{src/\+Exercises.\+hpp@{src/\+Exercises.\+hpp}}


Prototypes of functions for exercises.  


This graph shows which files directly or indirectly include this file\+:
% FIG 0
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
void \hyperlink{Exercises_8hpp_a957b4a07a0af694ece95930222172a11}{give\+Input} (int \&input, int from, int to)
\begin{DoxyCompactList}\small\item\em give valid input from user \end{DoxyCompactList}\item 
void \hyperlink{Exercises_8hpp_aa1d56f8ccc701ba9390816e07e411d6b}{give\+Input\+Operator} (char \&input)
\begin{DoxyCompactList}\small\item\em give valid input operator (+, -\/, /, $\ast$) \end{DoxyCompactList}\item 
void \hyperlink{Exercises_8hpp_aaff013486a0e36ffc8a51c929b8ba7dd}{count} (int first, int second, char oper)
\begin{DoxyCompactList}\small\item\em count first and second operands with oper operator \end{DoxyCompactList}\item 
void \hyperlink{Exercises_8hpp_a855c9f169bd11754a6437522c0173391}{take\+User\+Input} (std\+::string \&user\+Input)
\begin{DoxyCompactList}\small\item\em take from user low, high or correct answers \end{DoxyCompactList}\item 
void \hyperlink{Exercises_8hpp_a7b5edbf26f4b0a5f0e2dc3d5f18daf00}{min\+Max\+Changer} (std\+::string \&user\+Input, int \&min, int \&max, int \&number)
\begin{DoxyCompactList}\small\item\em change minimum and maximum by using user\+Input \end{DoxyCompactList}\item 
void \hyperlink{Exercises_8hpp_ade13edb4f41064bf1269374eb745ee50}{print\+Array} (const int \&array, const int \&size)
\begin{DoxyCompactList}\small\item\em print all the elements from an array \end{DoxyCompactList}\item 
void \hyperlink{Exercises_8hpp_a62f12030f0eda10d0faa295c706213ce}{write\+Array} (int \&array, const int \&size)
\begin{DoxyCompactList}\small\item\em write to array \end{DoxyCompactList}\item 
\mbox{\Hypertarget{Exercises_8hpp_a8ef7288f3778aad35b3e4829945aa30c}\label{Exercises_8hpp_a8ef7288f3778aad35b3e4829945aa30c}} 
void \hyperlink{Exercises_8hpp_a8ef7288f3778aad35b3e4829945aa30c}{arithmetic\+Oper} ()
\begin{DoxyCompactList}\small\item\em take arithmetic operators and do it \end{DoxyCompactList}\item 
\mbox{\Hypertarget{Exercises_8hpp_a017868d5759b33c18b65ab4d45a488a8}\label{Exercises_8hpp_a017868d5759b33c18b65ab4d45a488a8}} 
void \hyperlink{Exercises_8hpp_a017868d5759b33c18b65ab4d45a488a8}{reverse\+The\+Number} ()
\begin{DoxyCompactList}\small\item\em take number and revese it \end{DoxyCompactList}\item 
\mbox{\Hypertarget{Exercises_8hpp_a2090203cb4b887ad8f4a31abf73eace0}\label{Exercises_8hpp_a2090203cb4b887ad8f4a31abf73eace0}} 
void \hyperlink{Exercises_8hpp_a2090203cb4b887ad8f4a31abf73eace0}{guess\+The\+Number} ()
\begin{DoxyCompactList}\small\item\em Pc guess your number. \end{DoxyCompactList}\item 
int $\ast$ \hyperlink{Exercises_8hpp_a98e1dc230696a05071cd9d06f3d55789}{min\+And\+Max} (const int $\ast$array, const int \&size)
\begin{DoxyCompactList}\small\item\em find from array min and max elements and print it \end{DoxyCompactList}\item 
\mbox{\Hypertarget{Exercises_8hpp_afc817b5f165c164ceb1ef0617f005681}\label{Exercises_8hpp_afc817b5f165c164ceb1ef0617f005681}} 
void \hyperlink{Exercises_8hpp_afc817b5f165c164ceb1ef0617f005681}{ocur\+Numbers} ()
\begin{DoxyCompactList}\small\item\em function for calculating how many times each of numbers have been entered \end{DoxyCompactList}\item 
\mbox{\Hypertarget{Exercises_8hpp_a222561aff8d6287a3040640a07c54cdb}\label{Exercises_8hpp_a222561aff8d6287a3040640a07c54cdb}} 
std\+::string \hyperlink{Exercises_8hpp_a222561aff8d6287a3040640a07c54cdb}{dec\+To\+Bin} (int \&decimal)
\begin{DoxyCompactList}\small\item\em from decimal to binary \end{DoxyCompactList}\item 
\mbox{\Hypertarget{Exercises_8hpp_a335ab4cdb1e70af3cab0af04858ca29b}\label{Exercises_8hpp_a335ab4cdb1e70af3cab0af04858ca29b}} 
int \hyperlink{Exercises_8hpp_a335ab4cdb1e70af3cab0af04858ca29b}{bin\+To\+Dec} (std\+::string \&binary)
\begin{DoxyCompactList}\small\item\em from binary to decimal \end{DoxyCompactList}\item 
\mbox{\Hypertarget{Exercises_8hpp_afff38d8eb294cb4bd31937946130ee9d}\label{Exercises_8hpp_afff38d8eb294cb4bd31937946130ee9d}} 
int \hyperlink{Exercises_8hpp_afff38d8eb294cb4bd31937946130ee9d}{sum\+Of\+Array} (const int $\ast$array, const int \&size)
\begin{DoxyCompactList}\small\item\em Sum of all elements from array. \end{DoxyCompactList}\item 
\mbox{\Hypertarget{Exercises_8hpp_a596278f86f146810f6a520a87bae4f00}\label{Exercises_8hpp_a596278f86f146810f6a520a87bae4f00}} 
void \hyperlink{Exercises_8hpp_a596278f86f146810f6a520a87bae4f00}{sort\+Array} (int \&array, const int \&size)
\begin{DoxyCompactList}\small\item\em Sort array by using quick\+Sort() \end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
Prototypes of functions for exercises. 

\begin{DoxyAuthor}{Author}
Razmik Martirosyan 
\end{DoxyAuthor}


\subsection{Function Documentation}
\mbox{\Hypertarget{Exercises_8hpp_aaff013486a0e36ffc8a51c929b8ba7dd}\label{Exercises_8hpp_aaff013486a0e36ffc8a51c929b8ba7dd}} 
\index{Exercises.\+hpp@{Exercises.\+hpp}!count@{count}}
\index{count@{count}!Exercises.\+hpp@{Exercises.\+hpp}}
\subsubsection{\texorpdfstring{count()}{count()}}
{\footnotesize\ttfamily void count (\begin{DoxyParamCaption}\item[{int}]{first,  }\item[{int}]{second,  }\item[{char}]{oper }\end{DoxyParamCaption})}



count first and second operands with oper operator 


\begin{DoxyParams}{Parameters}
{\em first} & -\/ first integer \\
\hline
{\em second} & -\/ second integer \\
\hline
{\em oper} & -\/ +, -\/, /, $\ast$ arithmetic operator \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{Exercises_8hpp_a957b4a07a0af694ece95930222172a11}\label{Exercises_8hpp_a957b4a07a0af694ece95930222172a11}} 
\index{Exercises.\+hpp@{Exercises.\+hpp}!give\+Input@{give\+Input}}
\index{give\+Input@{give\+Input}!Exercises.\+hpp@{Exercises.\+hpp}}
\subsubsection{\texorpdfstring{give\+Input()}{giveInput()}}
{\footnotesize\ttfamily void give\+Input (\begin{DoxyParamCaption}\item[{int \&}]{input,  }\item[{int}]{from,  }\item[{int}]{to }\end{DoxyParamCaption})}



give valid input from user 

catch fails

exit when customer type -\/1

validate input range

if all is okay \mbox{\Hypertarget{Exercises_8hpp_aa1d56f8ccc701ba9390816e07e411d6b}\label{Exercises_8hpp_aa1d56f8ccc701ba9390816e07e411d6b}} 
\index{Exercises.\+hpp@{Exercises.\+hpp}!give\+Input\+Operator@{give\+Input\+Operator}}
\index{give\+Input\+Operator@{give\+Input\+Operator}!Exercises.\+hpp@{Exercises.\+hpp}}
\subsubsection{\texorpdfstring{give\+Input\+Operator()}{giveInputOperator()}}
{\footnotesize\ttfamily void give\+Input\+Operator (\begin{DoxyParamCaption}\item[{char \&}]{input }\end{DoxyParamCaption})}



give valid input operator (+, -\/, /, $\ast$) 


\begin{DoxyParams}{Parameters}
{\em \&input} & -\/ reference to input char variable \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{Exercises_8hpp_a98e1dc230696a05071cd9d06f3d55789}\label{Exercises_8hpp_a98e1dc230696a05071cd9d06f3d55789}} 
\index{Exercises.\+hpp@{Exercises.\+hpp}!min\+And\+Max@{min\+And\+Max}}
\index{min\+And\+Max@{min\+And\+Max}!Exercises.\+hpp@{Exercises.\+hpp}}
\subsubsection{\texorpdfstring{min\+And\+Max()}{minAndMax()}}
{\footnotesize\ttfamily int$\ast$ min\+And\+Max (\begin{DoxyParamCaption}\item[{const int $\ast$}]{array,  }\item[{const int \&}]{size }\end{DoxyParamCaption})}



find from array min and max elements and print it 


\begin{DoxyParams}{Parameters}
{\em $\ast$array} & -\/ const reference to array \\
\hline
{\em \&size} & -\/ const reference to size \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
int $\ast$ -\/ pointer to min\+Max array (first element is min second max) 
\end{DoxyReturn}
first element is minimum second maximum \mbox{\Hypertarget{Exercises_8hpp_a7b5edbf26f4b0a5f0e2dc3d5f18daf00}\label{Exercises_8hpp_a7b5edbf26f4b0a5f0e2dc3d5f18daf00}} 
\index{Exercises.\+hpp@{Exercises.\+hpp}!min\+Max\+Changer@{min\+Max\+Changer}}
\index{min\+Max\+Changer@{min\+Max\+Changer}!Exercises.\+hpp@{Exercises.\+hpp}}
\subsubsection{\texorpdfstring{min\+Max\+Changer()}{minMaxChanger()}}
{\footnotesize\ttfamily void min\+Max\+Changer (\begin{DoxyParamCaption}\item[{std\+::string \&}]{user\+Input,  }\item[{int \&}]{min,  }\item[{int \&}]{max,  }\item[{int \&}]{number }\end{DoxyParamCaption})}



change minimum and maximum by using user\+Input 


\begin{DoxyParams}{Parameters}
{\em \&user\+Input} & -\/ take user Inputed string \\
\hline
{\em \&min} & -\/ reference to min variable \\
\hline
{\em \&max} & -\/ reference to max variable \\
\hline
{\em \&number} & -\/ reference to number for changing min or max \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{Exercises_8hpp_ade13edb4f41064bf1269374eb745ee50}\label{Exercises_8hpp_ade13edb4f41064bf1269374eb745ee50}} 
\index{Exercises.\+hpp@{Exercises.\+hpp}!print\+Array@{print\+Array}}
\index{print\+Array@{print\+Array}!Exercises.\+hpp@{Exercises.\+hpp}}
\subsubsection{\texorpdfstring{print\+Array()}{printArray()}}
{\footnotesize\ttfamily void print\+Array (\begin{DoxyParamCaption}\item[{const int \&}]{array,  }\item[{const int \&}]{size }\end{DoxyParamCaption})}



print all the elements from an array 


\begin{DoxyParams}{Parameters}
{\em \&array} & -\/ reference to first element from array \\
\hline
{\em size} & -\/ size of array \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{Exercises_8hpp_a855c9f169bd11754a6437522c0173391}\label{Exercises_8hpp_a855c9f169bd11754a6437522c0173391}} 
\index{Exercises.\+hpp@{Exercises.\+hpp}!take\+User\+Input@{take\+User\+Input}}
\index{take\+User\+Input@{take\+User\+Input}!Exercises.\+hpp@{Exercises.\+hpp}}
\subsubsection{\texorpdfstring{take\+User\+Input()}{takeUserInput()}}
{\footnotesize\ttfamily void take\+User\+Input (\begin{DoxyParamCaption}\item[{std\+::string \&}]{user\+Input }\end{DoxyParamCaption})}



take from user low, high or correct answers 


\begin{DoxyParams}{Parameters}
{\em \&user\+Input} & -\/ reference to string variable for input \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{Exercises_8hpp_a62f12030f0eda10d0faa295c706213ce}\label{Exercises_8hpp_a62f12030f0eda10d0faa295c706213ce}} 
\index{Exercises.\+hpp@{Exercises.\+hpp}!write\+Array@{write\+Array}}
\index{write\+Array@{write\+Array}!Exercises.\+hpp@{Exercises.\+hpp}}
\subsubsection{\texorpdfstring{write\+Array()}{writeArray()}}
{\footnotesize\ttfamily void write\+Array (\begin{DoxyParamCaption}\item[{int \&}]{array,  }\item[{const int \&}]{size }\end{DoxyParamCaption})}



write to array 


\begin{DoxyParams}{Parameters}
{\em \&array} & -\/ reference to first element from array \\
\hline
{\em size} & -\/ size of array \\
\hline
\end{DoxyParams}
